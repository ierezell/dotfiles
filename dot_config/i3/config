####################
# workspace layout #
####################

## default i3 tiling mode:
workspace_layout default

#############################
# extra options for windows #
#############################

# Mod keys (window and alt)
set $mod Mod4
set $mod2 Mod1

# Set monitors
set $ecran eDP1
set $ecran2 HDMI1

## border indicator on windows:
new_window pixel 1

## thin borders
# hide_edge_borders both

font pango: Noto Sans Regular 10

#############################
### settings for i3-gaps: ###
#############################

## Set inner/outer gaps
gaps inner 10
gaps outer -4

# Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
# gaps inner|outer current|all set|plus|minus <px>
# gaps inner all set 10
# gaps outer all plus 5

# Smart gaps (gaps used if only more than one container on the workspace)
smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace)
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
smart_borders on

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0


        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

###########
# Windows #
###########

## window title alignment
# title_align center

# for_window [class="^.*"] border pixel 1 # Disable title bars


# Set colors from Xresources
# Change 'color7' and 'color2' to whatever colors you want i3 to use 
# from the generated scheme.
# NOTE: The '#f0f0f0' in the lines below is the color i3 will use if
# it fails to get colors from Xresources.
set_from_resource $fg i3wm.color7 #f0f0f0
set_from_resource $bg i3wm.color2 #f0f0f0

# class                 border  backgr. text indicator child_border
client.focused          #3380ff     $bg     $fg  $bg       #3380ff
client.focused_inactive $bg     $bg     $fg  $bg       $bg
client.unfocused        $bg     $bg     $fg  $bg       $bg
client.urgent           $bg     $bg     $fg  $bg       $bg
client.placeholder      $bg     $bg     $fg  $bg       $bg

client.background       $bg

##########################
# Windows And Navigation #
##########################

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# switch/iterate between workspaces
bindsym $mod+Tab workspace next
bindsym $mod+Shift+Tab workspace prev

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right
bindsym $mod2+h focus left
bindsym $mod2+j focus down
bindsym $mod2+k focus up
bindsym $mod2+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right
bindsym $mod2+Shift+h move left
bindsym $mod2+Shift+j move down
bindsym $mod2+Shift+k move up
bindsym $mod2+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right
bindsym $mod2+Shift+Left move left
bindsym $mod2+Shift+Down move down
bindsym $mod2+Shift+Up move up
bindsym $mod2+Shift+Right move right

# split in horizontal orientation
bindsym $mod+g split h;exec notify-send 'tile horizontally'
bindsym $mod2+g split h;exec notify-send 'tile horizontally'

# split in vertical orientation
bindsym $mod+v split v;exec notify-send 'tile vertically'
bindsym $mod2+v split v;exec notify-send 'tile vertically'

# enter fullscreen mode for the focused container
bindsym $mod+F11 fullscreen toggle
bindsym $mod2+F11 fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking; exec notify-send 'stacking'
bindsym $mod+t layout tabbed; exec notify-send 'tabbed'
bindsym $mod+e layout toggle split; exec notify-send 'toggle'
bindsym $mod2+s layout stacking; exec notify-send 'stacking'
bindsym $mod2+t layout tabbed; exec notify-send 'tabbed'
bindsym $mod2+e layout toggle split; exec notify-send 'toggle'

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle
bindsym $mod2+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle
# bindsym $mod2+space focus mode_toggle

# focus the parent container
bindsym $mod+p focus parent
bindsym $mod2+p focus parent

# focus the child container
#bindsym $mod+d focus chil
set $ws1 "1:"
set $ws2 "2:"
set $ws3 "3:"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "0"

# Set default workspace on screens.
workspace $ws1 output $ecran
workspace $ws2 output $ecran
workspace $ws3 output $ecran
workspace $ws4 output $ecran
workspace $ws5 output $ecran
workspace $ws6 output $ecran2
workspace $ws7 output $ecran2
workspace $ws8 output $ecran2
workspace $ws9 output $ecran2
workspace $ws10 output $ecran2

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

bindsym $mod2+1 workspace $ws1
bindsym $mod2+2 workspace $ws2
bindsym $mod2+3 workspace $ws3
bindsym $mod2+4 workspace $ws4
bindsym $mod2+5 workspace $ws5
bindsym $mod2+6 workspace $ws6
bindsym $mod2+7 workspace $ws7
bindsym $mod2+8 workspace $ws8
bindsym $mod2+9 workspace $ws9
bindsym $mod2+0 workspace $ws10

# move focused container to workspace first screen
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# Move focused container to workspace second screen
bindsym $mod2+Shift+1 move container to workspace $ws1
bindsym $mod2+Shift+2 move container to workspace $ws2
bindsym $mod2+Shift+3 move container to workspace $ws3
bindsym $mod2+Shift+4 move container to workspace $ws4
bindsym $mod2+Shift+5 move container to workspace $ws5
bindsym $mod2+Shift+6 move container to workspace $ws6
bindsym $mod2+Shift+7 move container to workspace $ws7
bindsym $mod2+Shift+8 move container to workspace $ws8
bindsym $mod2+Shift+9 move container to workspace $ws9
bindsym $mod2+Shift+0 move container to workspace $ws10

# bindsym $mod+Shift+a move container to output left
# bindsym $mod+Shift+e move container to output right

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# Set shut down, restart and locking features
bindsym $mod+Shift+e mode "$mode_system"

set $mode_system (l)ock, (e)xit, switch_(u)ser, (s)uspend, (h)ibernate, (r)eboot, (Shift+s)hutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id ~/.config/i3/scripts/blur-lock,mode "default"
    bindsym s exec --no-startup-id systemctl suspend, mode "default"
    bindsym e exec --no-startup-id i3-msg exit, mode "default"
    bindsym h exec --no-startup-id systemctl hibernate, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym Shift+s exec --no-startup-id systemctl poweroff, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"
bindsym $mod2+r mode "resize"


################
# Applications #
################

# Bind to workspace at instanciation
assign [class="Xfce4-terminal"] $ws1
assign [class="(?i)firefox"] $ws2
assign [class="Thunar"] $ws3
for_window [class=Xfce4-terminal] focus
for_window [class=(?i)firefox] focus
for_window [class=Thunar] focus

# start a terminal
bindsym $mod+Return exec alacritty
bindsym $mod2+Return exec alacritty


# kill focused window
bindsym $mod+Shift+q kill
bindsym $mod2+Shift+q kill

# Rofi Menu
bindsym $mod+d exec "rofi -show drun -config ~/.config/rofi/rofidmenu.rasi"
bindsym $mod2+d exec "rofi -show drun -config ~/.config/rofi/rofidmenu.rasi"
# bindsym $mod+Tab exec "rofi -show window -terminal /usr/bin/alacritty"
# bindsym $mod2+Tab exec "rofi -show window -terminal /usr/bin/alacritty"
bindsym $mod+c exec --no-startup-id rofi -modi "clipboard:greenclip print" -show clipboard -config ~/.config/rofi/rofidmenu.rasi
exec --no-startup-id greenclip daemon>/dev/null


# Volume buttons
bindsym XF86AudioRaiseVolume exec amixer -D pulse sset Master 5%+ && pkill -RTMIN+1 i3blocks
bindsym XF86AudioLowerVolume exec amixer -D pulse sset Master 5%- && pkill -RTMIN+1 i3blocks
bindsym XF86AudioMute exec amixer sset Master toggle && killall -USR1 i3blocks

# Brightness buttons
bindsym XF86MonBrightnessUp exec xbacklight -inc 10  && notify-send "Brightness - $(xbacklight -get | cut -d '.' -f 1)%"
bindsym XF86MonBrightnessDown exec xbacklight -dec 10  && notify-send "Brightness - $(xbacklight -get | cut -d '.' -f 1)%"

bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioPause exec playerctl play-pause
bindsym $mod2+space exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym $mod2+bracketright exec playerctl next
bindsym XF86AudioPrev exec playerctl previous
bindsym $mod2+bracketleft exec playerctl previous

# Start applications
bindsym $mod+F2 exec firefox
bindsym $mod+F3 exec thunar
bindsym $mod+F4 exec termite -e ranger
bindsym $mod+F6 exec spotify
bindsym $mod+F7 exec termite -e mpsyt
bindsym $mod2+F2 exec firefox
bindsym $mod2+F3 exec thunar
bindsym $mod2+F4 exec termite -e ranger
bindsym $mod2+F5 exec spotify
bindsym $mod2+F7 exec termite -e mpsyt
bindsym $mod+Shift+z exec ~/.config/i3/scripts/blur-lock

# Wallpapers
#bindsym $mod+Ctrl+w exec feh --recursive --randomize --bg-max --no-fehbg /mnt/Documents/Images/Wallpapers/1920_1080/* &
bindsym $mod+Ctrl+w exec wal -i ~/dotfiles/Wallpapers/1920_1080 --saturate 0.4 

# Screenshot 
bindsym Print exec scrot ~/%Y-%m-%d-%T-screenshot.png && notify-send "Screenshot saved to ~/$(date +"%Y-%m-%d-%T")-screenshot.png"

#############################################
# autostart applications/services on login: #
#############################################

#get auth work with polkit-gnome
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec --no-startup-id dex --autostart --environment i3
exec --no-startup-id nm-applet
exec --no-startup-id blueberry-tray


####################
# Startup programs #
####################
# exec setxkbmap -option caps:swapescape & # Swap ESC and MAJ
exec_always --no-startup-id picom -b # Fading and transparency (check .config/picom)
exec_always --no-startup-id xrandr --output $ecran --auto --output $ecran2 --mode 1920x1080 --right-of $ecran
exec_always --no-startup-id wal -i ~/dotfiles/Wallpapers/1920_1080 --saturate 0.6 & # Set wallpapers and all desktop color (from wallpaper colors)

############################################
# bar settings (input comes from i3blocks) #
############################################

# Define colors variables:
set $darkbluetrans	#08052be6
set $darkblue		#08052b
set $lightblue		#5294e2
set $urgentred		#e53935
set $white		#ffffff
set $black		#000000
set $purple		#e345ff
set $darkgrey		#383c4a
set $grey		#b0b5bd
set $mediumgrey		#8b8b8b
set $yellowbrown	#e1b700

# Start i3bar to display a workspace bar
# (plus the system information i3status finds out, if available)
bar {
		font pango: Noto Sans Regular 10
		status_command i3blocks -c ~/.config/i3/i3blocks.conf
	    	position bottom
#	    	i3bar_command i3bar --transparency
# it could be that you have no primary display set: set one (xrandr --output <output> --primary)
# reference: https://i3wm.org/docs/userguide.html#_tray_output
		    tray_output primary
		    tray_padding 0

# When strip_workspace_numbers is set to yes,
# any workspace that has a name of the form
# “[n][:][NAME]” will display only the name.
strip_workspace_numbers yes
##strip_workspace_name no

		    colors {
		    separator          $purple
		    background         $darkgrey
		    statusline         $white
#                          		border 		        bg		txt		indicator
		focused_workspace	$mediumgrey	   	$grey		$darkgrey	$purple
		active_workspace	$lightblue      	$mediumgrey	$darkgrey	$purple
		inactive_workspace	$darkgrey   		$darkgrey	$grey		$purple
		urgent_workspace	$urgentred	    	$urgentred	$white		$purple
	}
}

# you can add different bars for multidisplay setups on each display:
# set output HDMI-0 to the display you want the bar, --transparency can be set.
# Transparency needs rgba color codes to be used where the last two letters are the transparency factor see here:
# https://gist.github.com/lopspower/03fb1cc0ac9f32ef38f4
# #08052be6 --> e6=90%


